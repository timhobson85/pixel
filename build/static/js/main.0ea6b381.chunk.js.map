{"version":3,"sources":["components/ColorPicker.js","firebase.js","components/WebcamPage.js","components/SaveImage.js","components/ChatBox.js","components/Canvas.js","components/PixelGrid.js","components/Gallery.js","App.js","serviceWorker.js","index.js"],"names":["ColorPicker","state","displayColorPicker","color","props","disableAlpha","sendColorData","setState","hex","showColorPicker","className","id","style","backgroundColor","this","onClick","onChange","onChangeComplete","onMouseLeave","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","WebcamPage","image","webcamShow","setRef","webcam","capture","imageSrc","getScreenshot","setTimeout","pixelate","takeAnother","componentDidUpdate","c","refs","canvas","ctx","getContext","img1","webcamImage","w","width","h","height","drawImage","pixelArr","getImageData","data","y","x","p","fillStyle","fillRect","firebaseSetPixel","database","ref","set","update","Math","random","r","row","col","showWebCam","cancelClick","audio","screenshotFormat","videoConstraints","facingMode","minScreenshotHeight","minScreenshotWidth","src","SaveImage","artist","title","dataURL","saveImageShow","handleChange","e","target","name","value","firebaseFetchImage","once","then","pixels","pix","Object","values","val","output","Array","fill","map","el","i","length","saveImage","saveCanvas","imageData","toDataURL","oldsaveImage","saveImageImage","imgsrc","downloadClick","a","document","createElement","href","download","click","uploadClick","push","showSaveImage","getImageShow","placeholder","type","ChatBox","message","chatlog","firstMessage","handleKeyDown","key","messageBox","firebaseMessageListen","on","snapshot","chatBoxArray","unshift","onKeyDown","Canvas","firstDraw","mouseDown","firebaseGridWasUpdatedListen","console","log","drawCanvas","drawPixel","firebaseLastDrawListen","clickOnCanvas","rect","getBoundingClientRect","floor","pageX","left","pageY","top","mouseUp","mouseMove","mouseLeave","onMouseDown","onMouseMove","onMouseUp","PixelGrid","eyeDropperActive","activateEyeDropper","colorPickerData","turnOffWebcam","to","history","Gallery","images","artworks","artwork","reverse","alt","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0ea6b381.chunk.js","sourcesContent":["import React from 'react'\nimport { SketchPicker } from 'react-color';\nimport './css/ColorPicker.css'\n\n\nclass ColorPicker extends React.Component {\n\n  state = {\n    displayColorPicker: false,\n    color: this.props.color,\n    disableAlpha: true,\n  };\n\n  sendColorData = ( color ) => {\n    this.setState({ color : color.hex})\n    this.props.sendColorData(this.state.color)\n  }\n\n  showColorPicker = () => {\n    let displayColorPicker = this.state.displayColorPicker\n    this.setState({ displayColorPicker : !displayColorPicker })\n  }\n\n\n  render(){\n    return(\n      <div className='colorPickerButton'>\n        <button\n          id=\"colorPickerButton\"\n          style={{\n            backgroundColor:`${this.props.color}`\n          }}\n          onClick={this.showColorPicker}\n          >\n          {\n            this.state.displayColorPicker ?\n            'hide'\n            :\n            'pick a color'\n          }\n        </button>\n        {\n          this.state.displayColorPicker &&\n          <div className=\"sketchWrapper\">\n          <SketchPicker\n            color={this.state.color}\n            onChange={this.sendColorData}\n            onChangeComplete={ this.sendColorData}\n            disableAlpha={this.state.disableAlpha}\n            onMouseLeave={this.showColorPicker}\n          />\n          <div\n            id=\"pickerClose\"\n            onClick={this.showColorPicker}\n          >close</div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default ColorPicker\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyBCSiijuJoNKrO4nN5pYo2oXvMHQI92ohg\",\n  authDomain: \"pixel-54176.firebaseapp.com\",\n  databaseURL: \"https://pixel-54176.firebaseio.com\",\n  projectId: \"pixel-54176\",\n  storageBucket: \"pixel-54176.appspot.com\",\n  messagingSenderId: \"342090218102\",\n  appId: \"1:342090218102:web:75891e1b2670bca2693d57\",\n  measurementId: \"G-MF6VM6L27K\"\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React from 'react'\nimport Webcam from 'react-webcam'\nimport firebase from '../firebase.js'\nimport './css/WebcamPage.css'\n\n\nclass WebcamPage extends React.Component {\n\n  state = {\n    image: '',\n    webcamShow: false\n  };\n\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.setState({ image: imageSrc }, () => {\n      // this waits for the image to render before it runs the pixelate method.\n      setTimeout(() => this.pixelate(), 0)\n    });\n    this.setState({ webcamShow: false });\n    // this.props.turnOffWebcam()\n  };\n\n  takeAnother = () => {\n    this.setState({ image: null })\n  };\n\n  componentDidUpdate = () => {\n  };\n\n  pixelate = () => {\n    // console.log('clearing database');\n    // firebase.database().ref('/grid').remove();\n    let c = this.refs.canvas;\n    let ctx = c.getContext(\"2d\");\n    let img1 = this.refs.webcamImage;\n    // console.log('canvas', c);\n    // console.log('ctx', ctx);\n    // console.log('img1', img1);\n\n    let w = img1.width;\n    let h = img1.height;\n\n    c.width = w;\n    c.height = h;\n    ctx.drawImage(img1, 0, 0);\n\n    var pixelArr = ctx.getImageData(0, 0, w, h).data;\n    let sample_size = 1;\n\n    for (let y = 0; y < h; y += sample_size) {\n      for (let x = 0; x < w; x += sample_size) {\n        let p = (x + (y*w)) * 4;\n        ctx.fillStyle = \"rgba(\" + pixelArr[p] + \",\" + pixelArr[p + 1] + \",\" + pixelArr[p + 2] + \",\" + pixelArr[p + 3] + \")\";\n        ctx.fillRect(x, y, sample_size, sample_size);\n        this.firebaseSetPixel( x, y, ctx.fillStyle );\n        // console.log(x, y, ctx.fillStyle);\n\n      }\n    }\n    // console.log('redraw grid here');\n    firebase.database().ref(`/gridWasUpdated`).set({\n      update: Math.random() // firebase.database.ServerValue.TIMESTAMP\n    });\n  }\n\n  firebaseSetPixel = (r, c, color) => {\n    firebase.database().ref(`/grid/${r}-${c}`).set({\n      row: r,\n      col: c,\n      color: color\n    });\n  }\n  //\n  showWebCam = () => {\n    this.setState({ webcamShow: true});\n  }\n\n  cancelClick = () => {\n    this.setState({ webcamShow: false });\n  }\n\n  render() {\n    const videoConstraints = {\n      width: 1000,\n      height: 600,\n      facingMode: \"user\"\n    };\n\n    return (\n      <div className=\"webcamPage\">\n        <button onClick={this.showWebCam}>take photo</button>\n        {\n          this.state.webcamShow &&\n          <div className=\"webcamPopUp\">\n            <Webcam\n              className=\"showWebCam\"\n              audio={false}\n              height={600}\n              ref={this.setRef}\n              screenshotFormat=\"image/jpeg\"\n              width={1000}\n              videoConstraints={videoConstraints}\n              minScreenshotHeight={60}\n              minScreenshotWidth={100}\n              />\n            <button onClick={this.capture}>Capture photo</button>\n            <button onClick={this.cancelClick}>cancel</button>\n          </div>\n        }\n        <canvas ref=\"canvas\" width={100} height={60} className=\"hidden\" />\n        <img ref=\"webcamImage\" src={this.state.image} className=\"hidden\"/>\n      </div>\n\n    );\n  }\n} // Class\n\nexport default WebcamPage\n","import React from 'react'\nimport './css/SaveImage.css'\nimport firebase from '../firebase.js'\n\nclass SaveImage extends React.Component {\n\n  state = {\n    image : this.props.image,\n    artist: 'anonymous',\n    title: 'untitled',\n    dataURL: '',\n    saveImageShow: false,\n  }\n\n  componentDidMount(){\n    // this.saveImage()\n    // console.log('mounted');\n    this.firebaseFetchImage()\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value })\n  }\n\n\n  firebaseFetchImage = () => {\n    firebase.database().ref('/grid').once('value')\n    // .then((pixels) => console.log(pixels.val()))\n    .then((pixels) => {\n      const pix = Object.values( pixels.val() );\n      const output = Array(60).fill(null).map( el => new Array(100) );\n      let rows = 60; let cols = 100;\n      for(let i = 0; i < pix.length; i++){\n        const {row, col, color} = pix[i];\n        //fixing up negatives that broek it\n        if (row >= 0 && col >= 0) {\n          output[col][row] = color;\n        } else {\n          // console.log(col, row, color);\n        }\n      };\n      this.setState({ image: output });\n      this.saveImage()\n    });\n  }\n\n  saveImage = () => {\n    // console.log('saves');\n    let c = this.refs.saveCanvas;\n    let ctx = c.getContext(\"2d\");\n    c.width = 1000;\n    c.height = 600;\n    let imageData = this.state.image\n    for (var y = 0; y < imageData.length; y++) {\n      // console.log(imageData[y]) // rows\n      for (var x = 0; x < imageData[y].length; x++) {\n        // console.log(imageData[y][x]) // colomns ( pixls )\n        ctx.fillStyle = imageData[y][x]\n        ctx.fillRect( x*10, y*10, 10, 10)\n      }\n    }\n\n    // console.log(c.toDataURL('image/png'))\n    let data = (c.toDataURL('image/png'))\n    this.setState({dataURL: data})\n  }\n\n  oldsaveImage = () => {\n    // console.log('saves');\n    let c = this.refs.saveCanvas;\n    let ctx = c.getContext(\"2d\");\n    let img1 = this.refs.saveImageImage;\n    // console.log('canvas', c);\n    // console.log('ctx', ctx);\n    // console.log('img1', img1);\n    let w = img1.width;\n    let h = img1.height;\n    // c.width = w;\n    c.width = 1000;\n    // c.height = h;\n    c.height = 600;\n    let imageData = this.props.image\n    // console.log(imageData);\n    for (var y = 0; y < imageData.length; y++) {\n      // console.log(imageData[y]) // rows\n      for (var x = 0; x < imageData[y].length; x++) {\n        // console.log(imageData[y][x]) // colomns ( pixls )\n        ctx.fillStyle = imageData[y][x]\n        ctx.fillRect( x*10, y*10, 10, 10)\n      }\n    }\n\n    // console.log(c.toDataURL('image/png'));\n    let imgsrc = c.toDataURL('image/png');\n    img1.src = imgsrc\n    this.setState({ dataURL: imgsrc })\n  }\n\n\n\n  downloadClick = () => {\n    // console.log('download');\n    const data = this.refs.saveCanvas.toDataURL('image/png');\n    const a = document.createElement('a');\n    a.href = data;\n    a.download = `${this.state.artist}-${this.state.title}.png`;\n    a.click();\n  }\n\n  uploadClick = () => {\n    // console.log('upload');\n    // console.log(this.refs.saveCanvas.toDataURL('image/png'))\n    const { artist, title, dataURL } = this.state\n    // console.log( artist, title, dataURL );\n    firebase.database().ref(`/gallery/`).push({\n      artist,\n      title,\n      dataURL\n    })\n    this.props.push('/gallery')\n  }\n\n  showSaveImage = () => {\n    this.setState({ showSaveImage: true })\n    this.saveImage();\n  }\n\n  cancelClick = () => {\n    this.setState({ showSaveImage: false})\n    this.props.getImageShow()\n  }\n\n\n  render(){\n    return(\n      <div className=\"saveImagePage\">\n        <canvas\n          ref=\"saveCanvas\"\n          width={1000} height={600}\n          className=\"saveImageCanvas\"\n          />\n        <img\n          ref=\"saveImageImage\"\n          src={this.state.image}\n          className=\"saveImageImage hidden\"\n          />\n          {\n            this.state.dataURL ?\n            <div id=\"saveInputs\">\n              <label>artist</label>\n              <input\n                name=\"artist\"\n                onChange={this.handleChange}\n                placeholder={this.state.artist}\n                type=\"text\"\n                />\n              <label>title</label>\n              <input\n                name=\"title\"\n                onChange={this.handleChange}\n                placeholder={this.state.title}\n                type=\"text\"\n                />\n              <button onClick={this.uploadClick}>upload to gallery</button><button onClick={this.downloadClick}>download to disk</button>\n              <button onClick={this.cancelClick}>cancel</button>\n            </div>\n            :\n            <h1 id='saveImageLoadingText'>loading...</h1>\n          }\n    </div>\n    )\n  }\n\n} // Class\n\nexport default SaveImage\n","import React from 'react'\nimport firebase from '../firebase.js'\nimport './css/ChatBox.css'\n\nlet counter = 0;\n\nclass ChatBox extends React.Component {\n\n  state = {\n    message: '',\n    chatlog: [],\n    firstMessage: true,\n  }\n\n  componentDidMount(){\n    this.firebaseMessageListen();\n  }\n\n  handleKeyDown = (e) => {\n    if ( e.key === 'Enter' ) {\n      // console.log('enter pressed');\n      firebase.database().ref('/messages/').set({\n        update: Math.random(), //firebase.database.ServerValue.TIMESTAMP,\n        message: this.state.message\n      })\n      // this.setState({ message: ''})\n      this.refs.messageBox.value='';\n    }\n  }\n\n  firebaseMessageListen = () => {\n    // console.log('%cLISTENER SET UP', 'font-size: 16pt');\n    let listen = firebase.database().ref('/messages');\n    listen.on('value', (snapshot) => {\n      let data = snapshot.val();\n      if (this.state.firstMessage === false) {\n        // console.log(data);\n        let chatBoxArray = [...this.state.chatlog]\n        chatBoxArray.unshift(data.message)\n        this.setState({ chatlog: chatBoxArray})\n      }\n      this.setState({firstMessage: false})\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render(){\n    return(\n      <div className='chatBox'>\n        <div className=\"chatMessages\">\n        {\n          this.state.chatlog.length > 0 ?\n          this.state.chatlog.map( message =>\n            <p>{message}</p>\n          )\n          :\n          <p>chat to fellow artists</p>\n        }\n        </div>\n      <input\n        id=\"chatInput\"\n        ref=\"messageBox\"\n        type=\"text\"\n        name=\"message\"\n        placeholder='type here'\n        onKeyDown={this.handleKeyDown}\n        onChange={this.handleChange}\n        />\n      </div>\n    )\n  }\n\n} // Class\n\nexport default ChatBox\n","import React from 'react'\nimport firebase from '../firebase.js'\nimport './css/Canvas.css'\n\nclass Canvas extends React.Component {\n\n  state = {\n    image: null,\n    firstDraw: true,\n    mouseDown: false,\n  }\n\n\n  componentDidMount(){\n    this.firebaseFetchImage()\n    this.firebaseLastDrawListen()\n    this.firebaseGridWasUpdatedListen()\n  }\n\n  firebaseGridWasUpdatedListen = () => {\n    let listen = firebase.database().ref('/gridWasUpdated');\n    listen.on('value', (snapshot) => {\n      let data = snapshot.val()\n      this.firebaseFetchImage()\n    })\n  }\n\n  firebaseFetchImage = () => {\n    firebase.database().ref('/grid').once('value')\n    .then((pixels) => {\n      const pix = Object.values( pixels.val() );\n      const output = Array(60).fill(null).map( el => new Array(100) );\n      let rows = 60; let cols = 100;\n      for(let i = 0; i < pix.length; i++){\n        const {row, col, color} = pix[i];\n        //fixing up negatives that broek it\n        if (row >= 0 && col >= 0) {\n          output[col][row] = color;\n        } else {\n          console.log(col, row, color);\n        }\n      };\n      this.setState({ image: output });\n      this.saveImage()\n    });\n  }\n\n  saveImage = () => {\n    // console.log('saves');\n    let c = this.refs.drawCanvas;\n    let ctx = c.getContext(\"2d\");\n    c.width = 1000;\n    c.height = 600;\n    let imageData = this.state.image\n    for (var y = 0; y < imageData.length; y++) {\n      // console.log(imageData[y]) // rows\n      for (var x = 0; x < imageData[y].length; x++) {\n        // console.log(imageData[y][x]) // colomns ( pixls )\n        ctx.fillStyle = imageData[y][x]\n        ctx.fillRect( x*10, y*10, 10, 10)\n      }\n    }\n  }\n\n  drawPixel = (row, col, color) => {\n    let c = this.refs.drawCanvas;\n    let ctx = c.getContext(\"2d\");;\n    ctx.fillStyle = color\n    // ctx.fillStyle = imageData[y][x]\n    // y = rows\n    // x = cols\n    // ctx.fillRect( x*10, y*10, 10, 10)\n    ctx.fillRect( col*10, row*10, 10, 10)\n  }\n\n  firebaseLastDrawListen = () => {\n    let listen = firebase.database().ref('/lastDraw');\n    listen.on('value', (snapshot) => {\n      let data = snapshot.val();\n      if (this.state.firstDraw === false) {\n        // this.firebasePaint( data.row, data.col, data.color );\n        this.drawPixel( data.row, data.col, data.color );\n      };\n      this.setState({ firstDraw: false });\n    });\n  };\n\n  firebaseSetPixel = (c, r) => {\n    firebase.database().ref(`/grid/${r}-${c}`).set({\n      row: r,\n      col: c,\n      color: this.props.color\n    });\n  };\n\n  clickOnCanvas = (e) => {\n    // console.log('click');\n    let can = this.refs.drawCanvas;\n    let rect = can.getBoundingClientRect()\n    let c = Math.floor( (e.pageX - rect.left)/10)\n    let r = Math.floor( (e.pageY - rect.top )/10)\n    firebase.database().ref('/lastDraw').set({\n      row: r,\n      col: c,\n      color: this.props.color\n    });\n    this.firebaseSetPixel( r, c )\n  }\n\n  mouseDown = (e) => {\n    // console.log('mouseDown');\n    this.setState({ mouseDown: true })\n  }\n\n  mouseUp = (e) => {\n    // console.log('mouseUp');\n    this.setState({mouseDown:false})\n  }\n\n  mouseMove = (e) => {\n    if (this.state.mouseDown) {\n      // console.log('mouseMovemouseDownTrue');\n      let can = this.refs.drawCanvas;\n      let rect = can.getBoundingClientRect()\n      let c = Math.floor( (e.pageX - rect.left)/10)\n      let r = Math.floor( (e.pageY - rect.top )/10)\n      firebase.database().ref('/lastDraw').set({\n        row: r,\n        col: c,\n        color: this.props.color\n      });\n      this.firebaseSetPixel( r, c )\n    } else {\n      // console.log('mouseMovemouseDownFalse');\n    }\n  }\n\n  mouseLeave = (e) => {\n    // console.log('leave');\n    this.setState({mouseDown: false})\n  }\n\n\n  render(){\n    return(\n      <div className='canvas'>\n        { this.state.image ?\n        <canvas\n          ref=\"drawCanvas\"\n          className=\"drawCanvas\"\n          width={1000}\n          height={600}\n          onClick={this.clickOnCanvas}\n          onMouseDown={this.mouseDown}\n          onMouseMove={this.mouseMove}\n          onMouseUp={this.mouseUp}\n          onMouseLeave={this.mouseLeave}\n          />\n        :\n        'loading...'\n        }\n      </div>\n    )\n  }\n\n} // Class\n\nexport default Canvas\n","import React from 'react'\nimport './css/PixelGrid.css';\nimport { cloneDeep } from 'lodash'\nimport ColorPicker from './ColorPicker'\nimport firebase from '../firebase.js'\nimport WebcamPage from './WebcamPage'\nimport SaveImage from './SaveImage'\nimport ChatBox from './ChatBox'\nimport Canvas from './Canvas'\nimport {\n  Route,\n  Link,\n  HashRouter as Router\n} from 'react-router-dom'\n\n// i can take away state changes?!\n\nclass PixelGrid extends React.Component {\n\n  state = {\n    image: [],\n    color: \"rebeccapurple\",\n    mouseDown: false,\n    firstDraw: true,\n    eyeDropperActive: false,\n    webcamShow: false,\n    saveImageShow: false,\n  };\n\n  componentDidMount() {\n  };\n\n  activateEyeDropper = () => {\n    this.setState({\n      eyeDropperActive: true\n    });\n  };\n\n\n\n  colorPickerData = ( data ) => {\n    this.setState({ color : data});\n  };\n\n  saveImageShow = () => {\n    this.setState({ saveImageShow: true})\n  }\n\n  showWebCam = () => {\n    this.setState({ webcamShow: !this.state.webcamShow })\n  }\n  turnOffWebcam = () => {\n    this.setState({ webcamShow: false })\n  }\n\n  getImageShow = () => {\n    this.setState({ saveImageShow: false })\n  }\n\n  render(){\n\n    const { image } = this.state;\n\n    return(\n      <div className='App'>\n        <Link to=\"/gallery\">\n          <button id=\"pixelGridButton\">to gallery</button>\n        </Link>\n        {\n          this.state.saveImageShow && <SaveImage\n          push={this.props.history.push}\n          image={this.state.image}\n          getImageShow={this.getImageShow}\n        />\n        }\n        <Canvas\n          color={this.state.color}\n        />\n        <div className='toolBox'>\n          <WebcamPage />\n          <button onClick={this.saveImageShow}>save image</button>\n          <ColorPicker\n            color={this.state.color}\n            sendColorData={this.colorPickerData}\n            />\n        </div>\n        <br/>\n        <br/>\n        <ChatBox />\n        <div id=\"info\">\n          <p>collaborative with everyone online to create art</p>\n          <p>you can also take a photo to upload to the grid</p>\n          <p>you can also save your images to disk, or upload to the gallery</p>\n        </div>\n      </div>\n    )\n  }\n} // Class\n\nexport default PixelGrid\n\n// row/col inputs\n// <h4>testinput</h4>\n// <label>row</label>\n// <input type=\"number\" min=\"1\" max=\"128\" name=\"row\" defaultValue={this.state.row} onChange={this.handleChangeSelect}/>\n// <label>col</label>\n// <input type=\"number\" min=\"1\" max=\"128\" name=\"col\" defaultValue={this.state.col} onChange={this.handleChangeSelect}/>\n// <h4>endtestinput</h4>\n// <label> row </label>\n// <input type=\"text\" name=\"row\" onChange={this.handleChange} /> <br/>\n// <label> col </label>\n// <input type=\"text\" name=\"col\" onChange={this.handleChange} /> <br/>\n// <button onClick={this.createGrid}>click</button> <br/>\n\n// handleChange = (e) => {\n//   this.setState({ [e.target.name] : e.target.value })\n// }\n//\n// handleChangeSelect = (e) => {\n//   console.log(this.state.row, this.state.col);\n//   this.setState({ [e.target.name] : e.target.value })\n//   let image = []\n//   for (var i = 0; i < this.state.row; i++) {\n//     image[i] = []\n//     for (var j = 0; j < this.state.col; j++) {\n//       image[i][j] =  null\n//     }\n//   }\n//   this.setState({ image })\n// }\n\n// createGrid = () => {\n//   console.log(this.state.row, this.state.col);\n//   let image = []\n//   for (var i = 0; i < this.state.row; i++) {\n//     image[i] = []\n//     for (var j = 0; j < this.state.col; j++) {\n//       image[i][j] =  null\n//       // this.firebaseSetPixel( i, j ) // this was to seed grid\n//     }\n//   }\n//   this.setState({ image })\n// }\n\n\n// click and drag draw handlers\n// onMouseDown={() => this.setMouseDown(i, j)}\n// onMouseOver={() => this.paintMouseOver(i, j)}\n// onMouseUp={this.setMouseUp}\n\n// <button\n//   onClick={this.activateEyeDropper}\n//   className=\"eyedropperButton\"\n// >\n// eye dropper</button>\n","import React from 'react'\nimport firebase from '../firebase.js'\nimport './css/Gallery.css'\nimport {\n  Route,\n  Link,\n  HashRouter as Router\n} from 'react-router-dom'\n\nclass Gallery extends React.Component {\n\n  state = {\n    images : null\n  }\n\n  componentDidMount(){\n    firebase.database().ref('/gallery').once('value')\n    .then((artworks) => {\n      const artwork = Object.values( artworks.val() );\n      this.setState({ images: artwork.reverse() })\n    })\n  }\n\n  render(){\n    return(\n      <div className='gallery'>\n        <Link to=\"/\">\n          <button id=\"pixelGridButton\">back to canvas</button>\n        </Link>\n        <h2>Gallery</h2>\n        <div>\n          {\n            this.state.images ?\n            this.state.images.map( image =>\n              <div className=\"artwork\">\n                <div className=\"artworkWrapper\">\n                <img src={image.dataURL} alt=\"\"/>\n                <h4>\n                  artist: {image.artist}\n                </h4>\n                <h4>\n                  title: {image.title}\n                </h4>\n                </div>\n              </div>\n            )\n            :\n            <h2>loading...</h2>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}; // Class\n\nexport default Gallery;\n","import React from 'react';\nimport './App.css';\nimport {\n  Route,\n  Link,\n  HashRouter as Router\n} from 'react-router-dom'\nimport PixelGrid from './components/PixelGrid'\nimport Gallery from './components/Gallery'\nimport WebcamPage from './components/WebcamPage'\nimport Canvas from './components/Canvas'\n\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1 id=\"header\">pixels</h1>\n        <Router>\n        <Route exact path=\"/\" component={PixelGrid} />\n        <Route exact path=\"/webcam\" component={WebcamPage} />\n        <Route exact path=\"/gallery\" component={Gallery} />\n        <Route exact path=\"/Canvas\" component={Canvas} />\n        </Router>\n      </div>\n    )\n  }\n\n};\n\nexport default App;\n\n\n// <Link to=\"/gallery\">\n//   <button id=\"galleryButton\">gallery</button>\n// </Link>\n// <Link to=\"/Canvas\">\n//   <button id=\"TestCanvasButton\">Canvas</button>\n// </Link>\n// <Link to=\"/\">\n//   <button id=\"pixelGridButton\">pixelgrid</button>\n// </Link>\n// <Link to=\"/webcam\">\n//   <button id=\"webCamButton\">webcam</button>\n// </Link>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}